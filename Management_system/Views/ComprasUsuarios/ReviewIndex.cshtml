@model ReviewSolicitudesViewModel

@{
    ViewData["Title"] = "Solicitudes";
    Layout = "~/Views/Shared/_Layout_main.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">

<style>

    .fixed-width-btn {
        width: 50px;
    }

    .alert-custom {
        color: red;
        font-size: 1.2em;
        display: none;
        margin-top: 10px;
    }

    .card {
        border-radius: 15px;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
        border-bottom: 1px solid #e5e5e5;
        padding-bottom: 0.5rem;
        text-transform: uppercase;
    }

    input[type="submit"] {
        width: 150px;
    }



    .table {
        background-color: #ffffff;
        border-radius: 10px;
        overflow: hidden;
    }

        .table th {
            /* background-color: #343a40;
                color: #ffffff; */
            text-align: center;
            font-weight: 600;
            vertical-align: middle;
            font-size: 1rem;
        }

        .table td {
            text-align: center;
            vertical-align: middle;
            font-size: 0.95rem;
            color: #495057;
        }

    th a.sort-link {
        color: inherit;
        text-decoration: none;
        font-weight: bold;
    }

        th a.sort-link:hover {
            text-decoration: none;
        }

    .sort-indicator {
        margin-left: 5px;
        font-size: 0.8em;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f2f2f2;
    }

    .table-hover tbody tr:hover {
        background-color: #e9ecef;
    }


    .title-main {
        font-size: 1.6em;
        color: #333;
    }

    .title-menu {
        font-size: 1.4em;
        color: #333;
    }

    .card-header-title {
        font-size: 1.1em;
        color: #333;
    }

    .lead {
        font-size: 1.1rem;
        font-weight: 300;
    }

    .lead-content {
        font-size: 1.0rem;
        font-weight: 300;
    }

    .btn {
        /* background-color: #007bff;
                        border-color: #007bff; */
        font-weight: 500;
        padding: 5px 15px;
        border-radius: 20px;
        transition: background-color 0.3s ease;
    }

    .sortable-header {
        color: inherit;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 4px;
    }

        .sortable-header:hover {
            text-decoration: underline;
            cursor: pointer;
        }

    .sort-icon {
        font-size: 0.8em;
    }

</style>

<div class="container">
    <a asp-action="Compras" asp-controller="Main" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Volver
    </a>
</div>

<div class="col-12">
    <nav>
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.Pagination.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="ReviewIndex" asp-route-pageNumber="@(Model.Pagination.PageNumber - 1)" asp-route-pageSize="@Model.Pagination.PageSize" asp-route-searchString="@ViewData["CurrentFilter"]">Anterior</a>
            </li>
            @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
            {
                <li class="page-item @(i == Model.Pagination.PageNumber ? "active" : "") page-number" data-page="@i" style="display: @(i > 5 ? "none" : "inline-block")">
                    <a class="page-link" asp-action="ReviewIndex" asp-route-pageNumber="@i" asp-route-pageSize="@Model.Pagination.PageSize" asp-route-searchString="@ViewData["CurrentFilter"]">@i</a>
                </li>
            }
            <li class="page-item @(Model.Pagination.PageNumber == Model.Pagination.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-action="ReviewIndex" asp-route-pageNumber="@(Model.Pagination.PageNumber + 1)" asp-route-pageSize="@Model.Pagination.PageSize" asp-route-searchString="@ViewData["CurrentFilter"]">Siguiente</a>
            </li>
        </ul>
    </nav>
</div>


<div class="card mt-3">
    <div class="card-body">

        <div class="mt-1">
            <p class="text-center title-menu">Solicitudes de Compra</p>
            <hr />

            <h5>Busqueda</h5>
        </div>
        <form method="get" action="@Url.Action("ReviewIndex", "ComprasUsuarios")" class="form-inline">
            <div class="form-group row">
                <div class="col-md-4">
                    <label for="searchCriteria" class="mr-2">Criterio de búsqueda</label>
                    <select class="form-control" id="searchCriteria" name="searchCriteria">
                        <option value="">Seleccionar Criterio</option>
                        <option value="Consecutivo">Consecutivo</option>
                        <option value="Cliente">Cliente</option>
                        <option value="Proveedor">Proveedor</option>
                        <option value="Vendedor">Vendedor</option>
                        <option value="Estado">Estado</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="searchTerm" class="mr-2">Término de búsqueda</label>
                    <input type="text" class="form-control" id="searchTerm" name="searchTerm">
                </div>
                <div class="col-md-2">
                    <label for="fecha" class="mr-2">Fecha</label>
                    <input type="date" class="form-control" id="fecha" name="fecha">
                </div>
                <div class="col-md-2 text-center align-self-center">
                    <button type="submit" class="btn btn-primary">Buscar</button>
                </div>
            </div>
        </form>
        <div class="table-responsive mt-2">
            <table class="table table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>Acciones</th>
                        <th>
                            <a asp-action="ReviewIndex"
                               asp-route-sortOrder="Consecutivo"
                               asp-route-sortDirection="@(Model.SortOrder == "Consecutivo" && Model.SortDirection == "asc" ? "desc" : "asc")"
                               asp-route-pageNumber="1"
                               class="sortable-header">
                                Consecutivo
                                @(Model.SortOrder == "Consecutivo"
                                    ? (Model.SortDirection == "asc" ? "▲" : "▼")
                                    : "")
                            </a>
                        </th>
                        <th>
                            <a asp-action="ReviewIndex"
                               asp-route-sortOrder="Fecha"
                               asp-route-sortDirection="@(Model.SortOrder == "Fecha" && Model.SortDirection == "asc" ? "desc" : "asc")"
                               asp-route-pageNumber="1"
                               class="sortable-header">
                                Fecha
                                @(Model.SortOrder == "Fecha"
                                    ? (Model.SortDirection == "asc" ? "▲" : "▼")
                                    : "")
                            </a>
                        </th>
                        <th>Fecha Entrega</th>
                        <th>
                            <a asp-action="ReviewIndex"
                               asp-route-sortOrder="Cliente"
                               asp-route-sortDirection="@(Model.SortOrder == "Cliente" && Model.SortDirection == "asc" ? "desc" : "asc")"
                               asp-route-pageNumber="1"
                               class="sortable-header">
                                Cliente
                                @(Model.SortOrder == "Cliente"
                                    ? (Model.SortDirection == "asc" ? "▲" : "▼")
                                    : "")
                            </a>
                        </th>
                        <th>
                            <a asp-action="ReviewIndex"
                               asp-route-sortOrder="Proveedor"
                               asp-route-sortDirection="@(Model.SortOrder == "Proveedor" && Model.SortDirection == "asc" ? "desc" : "asc")"
                               asp-route-pageNumber="1"
                               class="sortable-header">
                                Proveedor
                                @(Model.SortOrder == "Proveedor"
                                    ? (Model.SortDirection == "asc" ? "▲" : "▼")
                                    : "")
                            </a>
                        </th>
                        <th>
                            <a asp-action="ReviewIndex"
                               asp-route-sortOrder="Vendedor"
                               asp-route-sortDirection="@(Model.SortOrder == "Vendedor" && Model.SortDirection == "asc" ? "desc" : "asc")"
                               asp-route-pageNumber="1"
                               class="sortable-header">
                                Vendedor
                                @(Model.SortOrder == "Vendedor"
                                    ? (Model.SortDirection == "asc" ? "▲" : "▼")
                                    : "")
                            </a>
                        </th>
                        <th>
                            <a asp-action="ReviewIndex"
                               asp-route-sortOrder="Estado"
                               asp-route-sortDirection="@(Model.SortOrder == "Estado" && Model.SortDirection == "asc" ? "desc" : "asc")"
                               asp-route-pageNumber="1"
                               class="sortable-header">
                                Estado
                                @(Model.SortOrder == "Estado"
                                    ? (Model.SortDirection == "asc" ? "▲" : "▼")
                                    : "")
                            </a>
                        </th>
                        <th>Usuario</th>
                        <th>Observaciones Compras</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Solicitudes)
                    {
                        <tr>
                            <td>
                                @{
                                    // Check if the status is "Override".
                                    if (item.Estado == "Anulado" || item.Estado == "OC Creada")
                                    {
                                    // If "Canceled", deactivate the "Edit" button.
                                        <button type="button" class="btn btn-success btn-sm fixed-width-btn" disabled>
                                            <i class="fas fa-plus"></i>
                                        </button>
                                        <button type="button" class="btn btn-primary btn-sm fixed-width-btn" disabled>
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        // If is not "Override", normal link to edit
                                        <a asp-action="ReviewCreate" asp-route-idSolicitud="@item.IdSolicitud" class="btn btn-success btn-sm fixed-width-btn">
                                            <i class="fas fa-plus"></i>
                                        </a>
                                        // <a asp-action="ReviewCreate" asp-route-id="@item.IdSolicitud" class="btn btn-success btn-sm fixed-width-btn">Crear OC</a>
                                        <a asp-action="ReviewEdit" asp-route-id="@item.IdSolicitud" class="btn btn-primary btn-sm fixed-width-btn">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    }
                                }
                                <a asp-action="ReviewDetails" asp-route-idSolicitud="@item.IdSolicitud" class="btn btn-secondary btn-sm fixed-width-btn">
                                    <i class="fas fa-info-circle"></i>
                                </a>
                            </td>
                            <td>@Html.DisplayFor(modelItem => item.Consecutivo)</td>
                            <td>@Html.DisplayFor(modelItem => item.Fecha)</td>
                            <td>@(item.FechaEntrega.HasValue ? item.FechaEntrega.Value.ToString("dd/MM/yyyy") : "")</td>
                            <td>@Html.DisplayFor(modelItem => item.IdClienteNavigation.Nombre)</td>
                            <td>@Html.DisplayFor(modelItem => item.IdProveedorNavigation.Nombre)</td>
                            <td>@Html.DisplayFor(modelItem => item.IdVendedorNavigation.Nombre)</td>
                            <td>@Html.DisplayFor(modelItem => item.Estado)</td>
                            <td>@Html.DisplayFor(modelItem => item.IdUsuarioNavigation.Username)</td>
                            <td>@Html.DisplayFor(modelItem => item.Observaciones)</td>
                            
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="row">
            <div class="col-12">
                <nav>
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.Pagination.PageNumber == 1 ? "disabled" : "")">
                            <a class="page-link" asp-action="ReviewIndex" asp-route-pageNumber="@(Model.Pagination.PageNumber - 1)" asp-route-pageSize="@Model.Pagination.PageSize" asp-route-searchString="@ViewData["CurrentFilter"]">Anterior</a>
                        </li>
                        @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.Pagination.PageNumber ? "active" : "") page-number" data-page="@i" style="display: @(i > 5 ? "none" : "inline-block")">
                                <a class="page-link" asp-action="ReviewIndex" asp-route-pageNumber="@i" asp-route-pageSize="@Model.Pagination.PageSize" asp-route-searchString="@ViewData["CurrentFilter"]">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.Pagination.PageNumber == Model.Pagination.TotalPages ? "disabled" : "")">
                            <a class="page-link" asp-action="ReviewIndex" asp-route-pageNumber="@(Model.Pagination.PageNumber + 1)" asp-route-pageSize="@Model.Pagination.PageSize" asp-route-searchString="@ViewData["CurrentFilter"]">Siguiente</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<style>
    .pagination {
        justify-content: center;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var now = new Date();
        var currentHour = now.getHours();
        var currentMinutes = now.getMinutes();

        // Check if the current time is after 4:59 PM
        if (currentHour > 16 || (currentHour === 16 && currentMinutes >= 59)) {
            document.getElementById('timeAlert').style.display = 'block';
        }
    });

    $(document).ready(function () {
        var maxVisiblePages = 5;
        var totalPages = @Model.Pagination.TotalPages;
        var currentPage = @Model.Pagination.PageNumber;

        function showPageNumbers(startPage) {
            $('.page-number').hide();
            for (var i = startPage; i < startPage + maxVisiblePages && i <= totalPages; i++) {
                $('.page-number[data-page=' + i + ']').show();
            }
        }

        showPageNumbers(Math.max(currentPage - Math.floor(maxVisiblePages / 2), 1));

        $('.previous-page a').click(function (e) {
            e.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                showPageNumbers(Math.max(currentPage - Math.floor(maxVisiblePages / 2), 1));
                updatePageLinks();
            }
        });

        $('.next-page a').click(function (e) {
            e.preventDefault();
            if (currentPage < totalPages) {
                currentPage++;
                showPageNumbers(Math.max(currentPage - Math.floor(maxVisiblePages / 2), 1));
                updatePageLinks();
            }
        });

        function updatePageLinks() {
            $('.pagination a').each(function () {
                var pageNumber = $(this).attr('asp-route-pageNumber');
                if (pageNumber) {
                    $(this).attr('href', '@Url.Action("Index")?pageNumber=' + pageNumber + '&pageSize=@Model.Pagination.PageSize&searchString=@ViewData["CurrentFilter"]');
                }
            });
        }

        updatePageLinks();
    });
</script>
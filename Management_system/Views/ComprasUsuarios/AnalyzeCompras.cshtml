@model Management_system.Models.Others.Analyze.AnalyzeCompraViewModel

@{
    ViewData["Title"] = "Análisis de Compras";
    Layout = "~/Views/Shared/_Layout_main.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">

<style>
    .fixed-width-btn {
        width: 80px;
    }

    .alert-custom {
        color: red;
        font-size: 1.2em;
        display: none;
        margin-top: 10px;
    }

    .card {
        border-radius: 15px;
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
        border-bottom: 1px solid #e5e5e5;
        padding-bottom: 0.5rem;
        text-transform: uppercase;
    }

    input[type="submit"] {
        width: 150px;
    }


    .title-main {
        font-size: 1.6em;
        color: #333;
    }

    .title-menu {
        font-size: 1.4em;
        color: #333;
    }

    .card-header-title {
        font-size: 1.1em;
        color: #333;
    }

    .lead {
        font-size: 1.1rem;
        font-weight: 300;
    }

    .lead-content {
        font-size: 1.0rem;
        font-weight: 300;
    }

    .btn {
        /* background-color: #007bff;
                            border-color: #007bff; */
        font-weight: 500;
        padding: 5px 15px;
        border-radius: 20px;
        transition: background-color 0.3s ease;
    }




    .table {
        background-color: #ffffff;
        border-radius: 10px;
        overflow: hidden;
    }

        .table th {
            /* background-color: #343a40;
                    color: #ffffff; */
            text-align: center;
            font-weight: 600;
            vertical-align: middle;
            font-size: 1rem;
        }

        .table td {
            text-align: center;
            vertical-align: middle;
            font-size: 0.95rem;
            color: #495057;
        }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f2f2f2;
    }

    .table-hover tbody tr:hover {
        background-color: #e9ecef;
    }

</style>


<div class="container">
    <a asp-action="Compras" asp-controller="Main" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Volver
    </a>
</div>

<div class="container mt-2">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card shadow-lg rounded-4 p-3">
                <div class="card-body">
                    <p class="text-center title-menu">Analisis de Compras</p>

                    <hr />
                    <p>Total de Compras: @Model.TotalCompras</p>

                    <form id="chartForm" method="post" asp-action="DownloadPDF" asp-controller="ComprasUsuarios">
                        <input type="hidden" name="asesor" value="@ViewBag.Asesor" />
                        <input type="hidden" name="usuario" value="@ViewBag.Usuario" />
                        <button type="submit" class="btn btn-primary">Descargar PDF</button>
                    </form>

                    <form method="get" asp-action="AnalyzeCompras" asp-controller="ComprasUsuarios">

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="asesor">Asesor</label>
                                    <select name="asesor" id="asesor" class="form-control">
                                        <option value="">Todos</option>
                                        @if (Model.Asesores != null)
                                        {
                                            @foreach (var asesor in Model.Asesores)
                                            {
                                                <option value="@asesor">@asesor</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="proveedor">Proveedor</label>
                                    <select name="proveedor" id="proveedor" class="form-control">
                                        <option value="">Todos</option>
                                        @if (Model.Proveedores != null)
                                        {
                                            @foreach (var proveedor in Model.Proveedores)
                                            {
                                                <option value="@proveedor">@proveedor</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="usuario">Usuario</label>
                                    <select name="usuario" id="usuario" class="form-control">
                                        <option value="">Todos</option>
                                        @if (Model.Usuarios != null)
                                        {
                                            @foreach (var usuario in Model.Usuarios)
                                            {
                                                <option value="@usuario">@usuario</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="col-md-1">
                                <div class="form-group text-center mt-3">
                                    <button type="submit" class="btn btn-primary">Filtrar</button>
                                </div>
                            </div>

                        </div>
                    </form>
                </div>
            </div>

            <div class="card shadow-lg rounded-4 p-3 mt-2">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5 class="text-center">Compras por mes</h5>
                            <canvas id="comprasChart" width="400" height="200"></canvas>
                        </div>
                        <div class="col-md-6">
                            <h5 class="text-center">Valor Total de Compras por Mes</h5>
                            <canvas id="comprasValorMesChart" width="400" height="200"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card shadow-lg rounded-4 p-3 mt-2">
                <div class="card-body">
                    <div class="row">

                        <div class="col-md-6">
                            <h5 class="text-center">Valor Total de Compras por Proveedor</h5>
                            <div style="width: 100%; max-width: 600px; height: 400px; margin: auto; position: relative; display: flex; justify-content: center; align-items: center;">
                                <canvas id="comprasValorProveedorChart"></canvas>
                            </div>
                        </div>

                        
                        <div class="col-md-6">
                            <h5 class="text-center">Valor Total de Compras por Usuario</h5>
                            <div style="width: 100%; max-width: 600px; height: 400px; margin: auto; position: relative; display: flex; justify-content: center; align-items: center;">
                                <canvas id="comprasValorUsuarioChart"></canvas>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            

            <div class="card shadow-lg rounded-4 p-3 mt-2">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5 class="text-center">Compras por usuario</h5>
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th class="col-usuario">Usuario</th>
                                            <th class="col-cantidad">Cantidad de Compras</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.ComprasPorUsuario != null)
                                        {
                                            @foreach (var item in Model.ComprasPorUsuario)
                                            {
                                                <tr>
                                                    <td class="col-usuario">@item.Usuario</td>
                                                    <td class="col-cantidad">@item.Count</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h5 class="text-center">Compras por asesor</h5>
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th class="col-usuario">Asesor</th>
                                            <th class="col-cantidad">Cantidad de Compras</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.ComprasPorAsesor != null)
                                        {
                                            @foreach (var item in Model.ComprasPorAsesor)
                                            {
                                                <tr>
                                                    <td class="col-usuario">@item.Asesor</td>
                                                    <td class="col-cantidad">@item.Count</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                </div>
            </div>

            <div class="card shadow-lg rounded-4 p-3 mt-2">
                <div class="card-body">
                    <h5 class="text-center">Compras por proveedor</h5>
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th class="col-usuario">Proveedor</th>
                                    <th class="col-cantidad">Cantidad de Compras</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.ComprasPorProveedor != null)
                                {
                                    @foreach (var item in Model.ComprasPorProveedor)
                                    {
                                        <tr>
                                            <td class="col-usuario">@item.Proveedor</td>
                                            <td class="col-cantidad">@item.Count</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Convertir los datos de comprasPorMes a un formato JSON
        var comprasData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ComprasPorMes));

        // Extraer etiquetas (meses) y datos (cantidad de compras) del objeto comprasData
        var labels = comprasData.map(function (item) {
            return item.Year + '-' + ('0' + item.Month).slice(-2);
        });

        var data = comprasData.map(function (item) {
            return item.Count;
        });

        // Crear el gráfico con Chart.js
        var ctx1 = document.getElementById('comprasChart').getContext('2d');
        var chart = new Chart(ctx1, {
            type: 'line', // Tipo de gráfico (línea)
            data: {
                labels: labels, // Etiquetas del gráfico
                datasets: [{
                    label: 'Compras por Mes', // Etiqueta del dataset
                    data: data, // Datos del dataset
                    borderColor: 'rgba(15, 38, 141, 1)', // Color de la línea
                    backgroundColor: 'rgba(15, 38, 141, 0.2)', // Color de fondo
                    borderWidth: 2, // Ancho de la línea
                    fill: false, // No llenar el área bajo la línea
                    tension: 0.1 // Tensión de la línea (suaviza las conexiones)
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true // Comenzar el eje y desde cero
                    }
                }
            }
        });


        // Convertir el gráfico a imagen y agregarlo al formulario
        document.addEventListener("DOMContentLoaded", function () {
            html2canvas(document.getElementById('comprasChart')).then(canvas => {
                var imgData = canvas.toDataURL('image/png');
                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'chartImage';
                input.value = imgData;
                document.getElementById('chartForm').appendChild(input);
            });
        });



        // **Gráfico de Valor de Compras por Mes**
        var comprasValorPorMes = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ComprasValorPorMes));
        var labelsMes = comprasValorPorMes.map(item => item.Year + '-' + ('0' + item.Month).slice(-2));
        var dataMes = comprasValorPorMes.map(item => item.TotalValor);

        var ctxMes = document.getElementById('comprasValorMesChart').getContext('2d');
        new Chart(ctxMes, {
            type: 'bar',
            data: {
                labels: labelsMes,
                datasets: [{
                    label: 'Valor Total de Compras por Mes',
                    data: dataMes,
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: { scales: { y: { beginAtZero: true } } }
        });

        // **Gráfico de Valor de Compras por Proveedor**
        var comprasValorPorProveedor = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ComprasValorPorProveedor));
        var labelsProveedor = comprasValorPorProveedor.map(item => item.Proveedor);
        var dataProveedor = comprasValorPorProveedor.map(item => item.TotalValor);

        var ctxProveedor = document.getElementById('comprasValorProveedorChart').getContext('2d');
        new Chart(ctxProveedor, {
            type: 'pie',
            data: {
                labels: labelsProveedor,
                datasets: [{
                    label: 'Valor Total de Compras por Proveedor',
                    data: dataProveedor,
                    backgroundColor: ['#ff6384', '#36a2eb', '#ffce56', '#4bc0c0', '#9966ff', '#ff9f40']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false // Evita que el gráfico se deforme
            }
        });

        // **Gráfico de Valor de Compras por Usuario**
        var comprasValorPorUsuario = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ComprasValorPorUsuario));

        // Verificar si hay datos
        if (comprasValorPorUsuario.length > 0) {
            var labelsUsuario = comprasValorPorUsuario.map(item => item.Usuario);
            var dataUsuario = comprasValorPorUsuario.map(item => item.TotalValor);

            var ctxUsuario = document.getElementById('comprasValorUsuarioChart').getContext('2d');
            new Chart(ctxUsuario, {
                type: 'bar', // Cambiado a 'bar' con orientación horizontal
                data: {
                    labels: labelsUsuario,
                    datasets: [{
                        label: 'Valor Total de Compras por Usuario',
                        data: dataUsuario,
                        backgroundColor: 'rgba(255, 99, 132, 0.5)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false, // Evita que el gráfico se deforme
                    indexAxis: 'y', // Hace que las barras sean horizontales
                    scales: {
                        x: { beginAtZero: true }
                    }
                }
            });
        } else {
            console.warn("No hay datos de compras por usuario.");
        }

    </script>
}